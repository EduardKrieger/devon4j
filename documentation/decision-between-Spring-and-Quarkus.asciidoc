== Decision between Spring an Quarkus


=== Quarkus

Although Quarkus has been released to a stable release in early 2021, it has been already used in multiple big projects successfully showing its potential to implement cloud native services with low resource consumption matching the needs of scalability and resilience in cloud native environments. With major stakeholders behind the open source community like Red Hat, its development and growth from its kickoff to the current state is very impressive and really shows the market needs and focus.
Another big advantage of Quarkus is that it started on a green field and therefore did not need to circumvetn main pillars of the spring framework like reflection, being able to take clean and up-to-date design decisions not needing to cope with elegacy issues.
Nonetheless, there is a experimental support also for some spring libraries already available in Quarkus, which make switching from spring to Quarkus much more easier if needed. We also provide a link:quarkus/getting-started-for-spring-developers.asciidoc[guide
for Spring developers] who want to adopt or try Quarkus for their
(next) projects as it really has some gamechanging advantages over
Spring.





=== General Recommendation
One essential differentiation has to be made on the decision for native or against native applications - the foreseen performance optimization of the JIT compiler of the JVM, which is not available anymore in a native image deployment. For sure, both component frameworks will also run on a JVM getting advantage again from JIT compilation, but depending on the overall landscape then, it is recommended to stay with the knowledge of the available teams, e.g. continue making use of devon4j based on spring or even if already in that state also here make use of Quarkus on JVM.